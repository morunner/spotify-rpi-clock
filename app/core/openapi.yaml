openapi: 3.0.0
info:
  version: '2'
  title: Spotify Clock WebGUI
  description: WebGUI for Spotify clock
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/morunner/spotify-rpi-clock/2
paths:
  /entry/add:
    post:
      summary: add a new entry
      tags:
        - entry
      requestBody:
        $ref: '#/components/requestBodies/entry'
      responses:
        '201':
          description: successfully added new entry
        '400':
          description: invalid entry format
  
  /entry/{time}:
    post:
      summary: modify entry with specified time
      tags:
        - entry
      parameters:
        - in: path
          name: time
          schema:
            $ref: '#/components/schemas/time'
          required: true
          description: time of the entry to be modified
      requestBody:
        $ref: '#/components/requestBodies/selection'
      responses:
        '201':
          description: successfully modified entry
        '400':
          description: invalid entry format
    get:
      summary: get entry by time
      tags:
        - entry
      parameters:
        - in: path
          name: time
          schema:
            $ref: '#/components/schemas/time'
          required: true
          description: time of the entry to get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entry'
  /entry/all/:
    get:
      summary: get all entries at once
      tags:
        - entry
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entries'
                
  /settings/volume/:
    post:
      summary: set volume
      tags:
        - settings
      requestBody:
        $ref: '#/components/requestBodies/volume'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
      

components:
  requestBodies:
    entry:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/entry'
    
    selection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/selection'
            
    volume:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/volume'
            
            
  schemas:
    time: 
      type: string
      example: 05:47
      
    selection:
      type: object
      properties:
        type:
          type: string
          description:
            Specifies whether a single song or an entire
            playlist is selected to be played at wake-up time
          example:
            "playlist"
        name:
          type: string
          description:
            name of the song or playlist
          example:
            "42"
        cover:
          type: string
          description:
            link to the cover image of song/playlist
          example:
            "https://i.scdn.co/image/ab67706c0000bebb7c99e28fc467d6ab3ed3887a"
        size:
          type: integer
          description:
            size of the playlist (or album which contains the selected song)
          example:
            156
        uri:
          type: string
          description:
            spotify uri of the song or playlist
          example:
            "spotify:playlist:0ktcMOkTDYB9xFDijvg37e"
        shuffle:
          type: boolean
          nullable: true
          description:
            Only relevant if a playlist selected. True if a random song should 
            be played from the playlist at wake-up times. False otherwise.
            If a song is selected, this should be Null.
        
    entry:
      type: object
      properties:
        time:
          $ref: '#/components/schemas/time'
        selection:
          $ref: '#/components/schemas/selection'
            
    entries:
      type: array
      items:
        $ref: '#/components/schemas/entry'
        
    volume:
      type: integer
      minimum: 0
      maximum: 100
      example: 56